@model IEnumerable<ProjectManager.Models.ProjectModel>

@{
    ViewBag.Title = "Projects";
}

<main class="projectbox">
    <section class="sidenav">
        <h2>Projects</h2>
        <div id="projectList">
            @foreach (var item in Model)
            {
                <p>
                    <a href="@Url.Action("Details", "Project", new { id = item.Id })">@item.Name</a>
                </p>
            }
        </div>
    </section>


    <div class="add-main">
        <button type="button" class="create-project-btn" onclick="showCreateProjectModal()">Create Project</button>
        <div class="modal-div" id="createProjectModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Project</h5>
                    <span class="close" onclick="closeCreateProjectModal()">&times;</span>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Create", "Project", FormMethod.Post, new { id = "createProjectForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @if (Model.Any())
                            {
                                @Html.LabelFor(m => m.First().Name)
                                @Html.TextBoxFor(m => m.First().Name, new { @class = "form-control", id = "projectName" })
                            }
                            else
                            {
                                @Html.LabelFor(m => m.FirstOrDefault().Name)
                                @Html.TextBoxFor(m => m.FirstOrDefault().Name, new { @class = "form-control", id = "projectName" })
                            }
                        </div>
                        <div class="form-group">
                            @if (Model.Any())
                            {
                                @Html.LabelFor(m => m.First().Description)
                                @Html.TextAreaFor(m => m.First().Description, new { @class = "form-control", id = "projectDescription" })
                            }
                            else
                            {
                                @Html.LabelFor(m => m.FirstOrDefault().Description)
                                @Html.TextAreaFor(m => m.FirstOrDefault().Description, new { @class = "form-control", id = "projectDescription" })
                            }
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Create" class="create-project-btn" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>



@section Scripts {
    <script>
        function showCreateProjectModal() {
            document.getElementById('createProjectModal').style.display = 'block';
        }

        function closeCreateProjectModal() {
            document.getElementById('createProjectModal').style.display = 'none';
        }

        window.onclick = function (event) {
            var modal = document.getElementById('createProjectModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('createProjectForm').addEventListener('submit', function (event) {
                event.preventDefault();

                var xhr = new XMLHttpRequest();
                xhr.open(this.method, this.action, true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        var data = JSON.parse(xhr.responseText);
                        if (data.success) {
                            var projectList = document.getElementById('projectList');
                            var newListItem = document.createElement('li');
                            newListItem.innerHTML = '<a href="/Project/Details/' + data.projectId + '">' + data.projectName + '</a>';
                            projectList.appendChild(newListItem);
                            closeCreateProjectModal();
                        } else {
                            alert('Error creating project.');
                        }
                    }
                };
                xhr.send(new URLSearchParams(new FormData(this)).toString());
            });
        });

    </script>
}
